{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/assets/js/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","kanaDict","$","ajaxSetup","headers","attr","dataType","processData","contentType","timeout","currentStr","currentRomaji","currentChar","score","strike","damage","mistakeDamage","judgeDrop","judgeHaving","timeRemaining","attackTimer","questions","player","monster","dropItem","user","field","havingItems","equipItem","victoryCnt","nextFieldFlag1","nextFieldFlag2","nextFieldFlag3","nextFieldFlag4","fieldData","FormData","status","displayEnter","readyTime","words","wordsKana","beforeWord","separationKana","separationRomaji","aditionalDict","charNum","correctCount","mistakeCount","judgeTyping","finishRomaji","flagN","levelUpCount","bonusPoint","judgeEnter","infoFlag","getData","ajax","url","type","data","done","response","number","having_items","equip_item","hide","text","level","hp","victoryCount","parseInt","Math","random","monsters","dropItems","setPlayerStatus","player_image","image","css","html","show","fail","console","log","append","textScroll","attack","defence","min_attack","mistake_damage","setQuestion","length","id","returnRomaji","returnAditionalDict","judgeN","aditionalList","push","indexOf","strList","j","wordChangeRomaji","kana","returnKana","judgeChar","beforeKana","pop","wordSeparation","join","shift","charInsort","charAt","typing","keyStr","collationList","remainingList","returnAnotherList","startsWith","correctType","currentTime","play","substr","pause","volume","ceil","field1_victory_count","field2_victory_count","field3_victory_count","field4_victory_count","field5_victory_count","victory","missType","slice","gameover","anotherList","nextStr","unshift","nextRomaji","monsterAttackCount","attack_interval","clearInterval","setInterval","monsterAttack","divideBonusPoint","get_item","selectNextAction","prop","setEquip","removeClass","filter","this","addClass","releaseField","nextExp","currentLv","battle_text","scroll","scrollHeight","on","e","preventDefault","val","word","word_kana","readyTimer","loop","ready","trigger","exp","havingItemsId","inArray","next_exp","addExp","getExp","levelUp","growHp","addStatusSelect","JSON","stringify","document","itemId","item","items","empty"],"mappings":"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","file":"/js/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","//かな辞書 kanaDictionary\r\nconst kanaDict = {\r\n    \"あ\":[\"a\"], \"い\":[\"i\",\"yi\"], \"う\":[\"u\",\"wu\",\"whu\"], \"え\":[\"e\"], \"お\":[\"o\"],\r\n    \"か\":[\"ka\",\"ca\"], \"き\":[\"ki\"], \"く\":[\"ku\",\"cu\",\"qu\"], \"け\":[\"ke\"], \"こ\":[\"ko\",\"co\"],\r\n    \"さ\":[\"sa\"],\"し\":[\"si\",\"ci\",\"shi\"],\"す\":[\"su\"],\"せ\":[\"se\",\"ce\"],\"そ\":[\"so\"],\r\n    \"た\":[\"ta\"],\"ち\":[\"ti\",\"chi\"],\"つ\":[\"tu\",\"tsu\"],\"て\":[\"te\"],\"と\":[\"to\"],\r\n    \"な\":[\"na\"],\"に\":[\"ni\"],\"ぬ\":[\"nu\"],\"ね\":[\"ne\"],\"の\":[\"no\"],\r\n    \"は\":[\"ha\"],\"ひ\":[\"hi\"],\"ふ\":[\"hu\",\"fu\"],\"へ\":[\"he\"],\"ほ\":[\"ho\"],\r\n    \"ま\":[\"ma\"],\"み\":[\"mi\"],\"む\":[\"mu\"],\"め\":[\"me\"],\"も\":[\"mo\"],\r\n    \"や\":[\"ya\"],\"ゆ\":[\"yu\"],\"よ\":[\"yo\"],\r\n    \"ら\":[\"ra\"],\"り\":[\"ri\"],\"る\":[\"ru\"],\"れ\":[\"re\"],\"ろ\":[\"ro\"],\r\n    \"わ\":[\"wa\"],\"を\":[\"wo\"],\"ん\":[\"n\",\"nn\",\"xn\"],\r\n    \"が\":[\"ga\"],\"ぎ\":[\"gi\"],\"ぐ\":[\"gu\"],\"げ\":[\"ge\"],\"ご\":[\"go\"],\r\n    \"ざ\":[\"za\"],\"じ\":[\"zi\",\"ji\"],\"ず\":[\"zu\"],\"ぜ\":[\"ze\"],\"ぞ\":[\"zo\"],\r\n    \"だ\":[\"da\"],\"ぢ\":[\"di\"],\"づ\":[\"du\"],\"で\":[\"de\"],\"ど\":[\"do\"],\r\n    \"ば\":[\"ba\"],\"び\":[\"bi\"],\"ぶ\":[\"bu\"],\"べ\":[\"be\"],\"ぼ\":[\"bo\"],\r\n    \"ぱ\":[\"pa\"],\"ぴ\":[\"pi\"],\"ぷ\":[\"pu\"],\"ぺ\":[\"pe\"],\"ぽ\":[\"po\"],\r\n    \"きゃ\":[\"kya\",\"kilya\",\"kixya\"],\"きぃ\":[\"kyi\",\"kili\",\"kixi\",\"kilyi\",\"kixyi\"],\"きゅ\":[\"kyu\",\"kilyu\",\"kixyu\"],\"きぇ\":[\"kye\",\"kile\",\"kixe\",\"kilye\",\"kixye\"],\"きょ\":[\"kyo\",\"kilyo\",\"kixyo\"],\r\n    \"ぎゃ\":[\"gya\",\"gilya\",\"gixya\"],\"ぎぃ\":[\"gyi\",\"gili\",\"gixi\",\"gilyi\",\"gixyi\"],\"ぎゅ\":[\"gyu\",\"gilyu\",\"gixyu\"],\"ぎぇ\":[\"gye\",\"gile\",\"gixe\",\"gilye\",\"gixye\"],\"ぎょ\":[\"gyo\",\"gilyo\",\"gixyo\"],\r\n    \"しゃ\":[\"sya\",\"sha\",\"sixya\",\"silya\",\"shixya\",\"shilya\",\"cixya\",\"cilya\"],\"しぃ\":[\"syi\",\"sili\",\"sixi\",\"silyi\",\"sixyi\",\"shixi\",\"shili\",\"cixi\",\"cili\"],\"しゅ\":[\"syu\",\"shu\",\"silyu\",\"sixyu\",\"shixyu\",\"shilyu\",\"cixyu\",\"cilyu\"],\"しぇ\":[\"she\",\"sye\",\"sile\",\"sixe\",\"silye\",\"sixye\",\"shixe\",\"shile\",\"cixe\",\"cile\"],\"しょ\":[\"syo\",\"sho\",\"silyo\",\"sixyo\",\"shixyo\",\"shilyo\",\"cixyo\",\"cilyo\"],\r\n    \"じゃ\":[\"ja\",\"zya\",\"jya\",\"zilya\",\"zixya\",\"jilya\",\"jixya\"],\"じぃ\":[\"zyi\",\"jyi\",\"zili\",\"zixi\",\"jili\",\"jixi\",\"zilyi\",\"zixyi\",\"jilyi\",\"jixyi\"],\"じゅ\":[\"zyu\",\"ju\",\"jyu\",\"zixyu\",\"zilyu\",\"jixyu\",\"jilyu\"],\"じぇ\":[\"zye\",\"je\",\"jye\",\"zixe\",\"zile\",\"jixe\",\"jile\"],\"じょ\":[\"zyo\",\"jo\",\"jyo\",\"zixyo\",\"zilyo\",\"jixyo\",\"jilyo\"],\r\n    \"ちゃ\":[\"tya\",\"cha\",\"cya\",\"tixya\",\"tilya\",\"chixya\",\"chilya\"],\"ちぃ\":[\"tyi\",\"cyi\",\"tixi\",\"tili\",\"chixi\",\"chili\"],\"ちゅ\":[\"tyu\",\"chu\",\"cyu\",\"tixyu\",\"tilyu\",\"chixyu\",\"chilyu\"],\"ちぇ\":[\"tye\",\"che\",\"cye\",\"tixe\",\"tile\",\"chixe\",\"chile\"],\"ちょ\":[\"tyo\",\"cho\",\"cyo\",\"tixyo\",\"tilyo\",\"chixyo\",\"chilyo\"],\r\n    \"にゃ\":[\"nya\",\"nixya\",\"nilya\"],\"にぃ\":[\"nyi\",\"nixi\",\"nili\"],\"にゅ\":[\"nyu\",\"nixyu\",\"nilyu\"],\"にぇ\":[\"nye\",\"nixe\",\"nile\"],\"にょ\":[\"nyo\",\"nixyo\",\"nilyo\"],\r\n    \"ひゃ\":[\"hya\",\"hixya\",\"hilya\"],\"ひぃ\":[\"hyi\",\"hixi\",\"hili\"],\"ひゅ\":[\"hyu\",\"hixyu\",\"hilyu\"],\"ひぇ\":[\"hye\",\"hixe\",\"hile\"],\"ひょ\":[\"hyo\",\"hixyo\",\"hilyo\"],\r\n    \"ふぁ\":[\"fa\",\"fwa\",\"fuxa\",\"fula\",\"huxa\",\"hula\"],\"ふぃ\":[\"fi\",\"fwi\",\"fyi\",\"fuxi\",\"fuli\",\"huxi\",\"huli\"],\"ふぅ\":[\"fwu\",\"fuxu\",\"fulu\",\"huxu\",\"hulu\"],\"ふぇ\":[\"fe\",\"fwe\",\"fye\",\"fuxe\",\"fule\",\"huxe\",\"hule\"],\"ふぉ\":[\"fo\",\"fwo\",\"fuxo\",\"fulo\",\"huxo\",\"hulo\"],\r\n    \"くぁ\":[\"qwa\",\"qa\",\"kwa\",\"kuxa\",\"kula\",\"quxa\",\"qula\",\"cuxa\",\"cula\"],\"くぃ\":[\"qwi\",\"qi\",\"qyi\",\"kuxi\",\"kuli\",\"quxi\",\"quli\",\"cuxi\",\"culi\"],\"くぅ\":[\"qwu\",\"kuxu\",\"kulu\",\"quxu\",\"qulu\",\"cuxu\",\"culu\"],\"くぇ\":[\"qwe\",\"qe\",\"qye\",\"kuxe\",\"kule\",\"quxe\",\"qule\",\"cuxe\",\"cule\"],\"くぉ\":[\"qwo\",\"qo\",\"kuxo\",\"kulo\",\"quxo\",\"qulo\",\"cuxo\",\"culo\"],\r\n    \"ぐぁ\":[\"gya\",\"guxa\",\"gula\"],\"ぐぃ\":[\"gyi\",\"guxi\",\"guli\"],\"ぐぅ\":[\"gyu\",\"guxu\",\"gulu\"],\"ぐぇ\":[\"gye\",\"guxe\",\"gule\"],\"ぐぉ\":[\"gyo\",\"guxo\",\"gulo\"],\r\n    \"すぁ\":[\"swa\",\"suxa\",\"sula\"],\"すぃ\":[\"swi\",\"suxi\",\"suli\"],\"すぅ\":[\"swu\",\"suxu\",\"sulu\"],\"すぇ\":[\"swe\",\"suxe\",\"sule\"],\"すぉ\":[\"swo\",\"suxo\",\"sulo\"],\r\n    \"てゃ\":[\"tha\",\"texya\",\"telya\"],\"てぃ\":[\"thi\",\"texi\",\"teli\"],\"てゅ\":[\"thu\",\"texyu\",\"telyu\"],\"てぇ\":[\"the\",\"texe\",\"tele\"],\"てょ\":[\"tho\",\"texyo\",\"telyo\"],\r\n    \"とぁ\":[\"twa\"],\"とぃ\":[\"twi\"],\"とぅ\":[\"twu\",\"toxu\",\"tolu\"],\"とぇ\":[\"twe\"],\"とぉ\":[\"two\",\"toxo\",\"tolo\"],\r\n    \"ぢゃ\":[\"dya\",\"dixya\",\"dilya\"],\"ぢぃ\":[\"dyi\"],\"ぢゅ\":[\"dyu\"],\"ぢぇ\":[\"dye\"],\"ぢょ\":[\"dyo\"],\r\n    \"でゃ\":[\"dha\"],\"でぃ\":[\"dhi\",\"dexi\",\"deli\"],\"でゅ\":[\"dhu\",\"dexyu\",\"delyu\"],\"でぇ\":[\"dhe\"],\"でょ\":[\"dho\"],\r\n    \"どぁ\":[\"dwa\"],\"どぃ\":[\"dwi\"],\"どぅ\":[\"dwu\",\"doxu\",\"dolu\"],\"どぇ\":[\"dwe\"],\"どぉ\":[\"dwo\"],\r\n    \"びゃ\":[\"bya\",\"bixya\",\"bilya\"],\"びぃ\":[\"byi\"],\"びゅ\":[\"byu\",\"bixyu\",\"bilyu\"],\"びぇ\":[\"bye\"],\"びょ\":[\"byo\",\"bixyo\",\"bilyo\"],\r\n    \"ぴゃ\":[\"pya\",\"pixya\",\"pilya\"],\"ぴぃ\":[\"pyi\"],\"ぴゅ\":[\"pyu\",\"pixyu\",\"pilyu\"],\"ぴぇ\":[\"pye\"],\"ぴょ\":[\"pyo\",\"pixyo\",\"pilyo\"],\r\n    \"りゃ\":[\"rya\",\"rixya\",\"rilya\"],\"りゅ\":[\"ryu\",\"rixyu\",\"rilyu\"],\"りょ\":[\"ryo\",\"rixyo\",\"rilyo\"],\r\n    \"ー\":[\"-\"],\" \":[\" \"],\"、\":[\",\"],\"？\":[\"?\"],\"！\":[\"!\"],\"。\":[\".\"],\r\n    \"っ\":[\"xtu\",\"ltu\",\"xtsu\",\"ltsu\"],\r\n    \"ぁ\":[\"xa\",\"la\"],\r\n    \"ぇ\":[\"xe\",\"le\"],\r\n    \"ゃ\":[\"lya\",\"xya\"],\"ゅ\":[\"xyu\",\"lyu\"],\"ょ\":[\"lyo\",\"xyo\"],\r\n    \"a\":\"a\",\"b\":\"b\",\"c\":\"c\",\"d\":\"d\",\"e\":\"e\",\"f\":\"f\",\"g\":\"g\",\"h\":\"h\",\"i\":\"i\",\"j\":\"j\",\"k\":\"k\",\"l\":\"l\",\"m\":\"m\",\"n\":\"n\",\r\n    \"o\":\"o\",\"p\":\"p\",\"q\":\"q\",\"r\":\"r\",\"s\":\"s\",\"t\":\"t\",\"u\":\"u\",\"v\":\"v\",\"w\":\"w\",\"x\":\"x\",\"y\":\"y\",\"z\":\"z\",\r\n    \"\":\"\",\",\":\",\"\r\n}\r\n\r\n$(function() {\r\n\r\n    //ajax通信のセットアップ\r\n    $.ajaxSetup({\r\n        headers: {\r\n            'X-CSRF-TOKEN' : $('meta[name=\"csrf-token\"]').attr('content')\r\n        },\r\n        dataType: 'json',\r\n        processData: false,\r\n        contentType: false,\r\n        timeout: 10000,\r\n    });\r\n\r\n    //各取得データを保持する為の変数\r\n    let questions = [];\r\n    let player = [];\r\n    let monster = [];\r\n    let dropItem = [];\r\n    let user = [];\r\n    let field = [];\r\n    let havingItems = [];\r\n    let equipItem = [];\r\n    //勝利数を保持する変数\r\n    let victoryCnt = 0;\r\n    //フィールド解放フラグ\r\n    let nextFieldFlag1 = 0;\r\n    let nextFieldFlag2 = 0;\r\n    let nextFieldFlag3 = 0;\r\n    let nextFieldFlag4 = 0;\r\n    //選択したフィールドの値を保持しておく変数\r\n    let fieldData = new FormData();\r\n    //現在の画面ステータスを管理する\r\n    //0:フィールド選択中, 1:バトル開始前, 2:バトル中, 3:バトル勝利, 4:バトル敗北,またはバトル後の選択画面\r\n    let status = 0;\r\n    //勝利後のテキストスクロールに利用\r\n    let displayEnter = 0;\r\n    //バトル開始前のカウントダウン用\r\n    let readyTime = 3;\r\n    //questionsの各値を格納しておく変数\r\n    let words = [];\r\n    let wordsKana = [];\r\n    //問題文が連続して出題されるのを防ぐ為に1問前の問題文を格納しておく変数\r\n    let beforeWord = \"\";\r\n    //問題文を区切って格納する為の変数\r\n    let separationKana = [];\r\n    let separationRomaji = [];\r\n    //あいまい入力用の一時的な辞書として利用する為の変数\r\n    let aditionalDict = [];\r\n    //入力対象を格納する為の変数\r\n    let currentStr,currentRomaji,currentChar;\r\n    //入力対象を判定する為の変数\r\n    let charNum = 0;\r\n    //正解数とミス数をカウントする変数\r\n    let correctCount = 0;\r\n    let mistakeCount = 0;\r\n    //スコア\r\n    let score;\r\n    //playerが与えるダメージ\r\n    let strike;\r\n    //playerが受けるダメージ\r\n    let damage;\r\n    //タイプミス時のダメージ\r\n    let mistakeDamage;\r\n    //\r\n    let judgeTyping = [];\r\n    let finishRomaji = [];\r\n    //\r\n    let flagN = 0;\r\n    //レベルアップ判定に利用\r\n    let levelUpCount = 0;\r\n    let bonusPoint = 0;\r\n    //アイテムドロップの判定に利用\r\n    let judgeDrop;\r\n    let judgeHaving;\r\n    let timeRemaining;\r\n    let attackTimer;\r\n    //バトル後のテキスト処理時にEnterキーが連打されるのを防ぐ為の変数\r\n    let judgeEnter = 0;\r\n    let infoFlag = 0;\r\n\r\n\r\n\r\n    //以下フィールド選択～バトル開始前の処理 status=0\r\n\r\n    //フィールドを選択した際の処理\r\n    $('.field_btn').on('click', function(e) {\r\n        e.preventDefault();\r\n\r\n\r\n        $('#battle_text').append(\"<br>\" + \"通信中・・・\")\r\n\r\n        fieldData.append('field_id', $(this).val());\r\n\r\n        getData();\r\n    });\r\n\r\n    //バトルを開始するのに必要なデータを取得する\r\n    function getData() {\r\n        $.ajax({\r\n            url: '/getdata',\r\n            type: 'POST',\r\n            data: fieldData,\r\n        })\r\n        .done(function(response) {\r\n            //各値を保持する\r\n            questions = response.questions;\r\n            player = response.player;\r\n            user = response.user;\r\n            field = response.field;\r\n            havingItems = response.having_items;\r\n            equipItem = response.equip_item;\r\n\r\n            //次のバトルを選択した際表示されていたボタンを非表示にする\r\n            $('.select_next_action').hide();\r\n            $('.select_field_display').hide();\r\n            $('.equipment_display').hide();    \r\n\r\n            //各値のセット\r\n            $('.player_name').text(user.name);\r\n            $('.player_level').text(player.level);\r\n            $('#player_hp').text(player.hp);\r\n            \r\n            let number;\r\n            victoryCnt = victoryCount();\r\n            if(victoryCnt < 5) {\r\n                number = parseInt(Math.random() * victoryCnt);\r\n            }else {\r\n                number = parseInt(Math.random() * 5);\r\n            }\r\n            \r\n            monster = response.monsters[number];\r\n            dropItem = response.dropItems[number];\r\n\r\n            $('.monster_name').text(monster.name);\r\n            $('#monster_hp').text(monster.hp);\r\n\r\n            //プレイヤーのステータス設定処理\r\n            setPlayerStatus();\r\n            \r\n            if(player.player_image == 1) {\r\n                $('.player_image').attr('src', '/images/player_images/主人公男h150.png');\r\n            }else {\r\n                $('.player_image').attr('src', '/images/player_images/主人公女h150.png');\r\n            }\r\n\r\n            $('.monster_image').attr('src', '/images/monster_images/' + monster.image);\r\n\r\n            $('.rpg_display').css('background-image', 'url(/images/field_images/' + field.image + ')');\r\n\r\n            $('.select_field_display').hide();\r\n            $('#battle_text').html(monster.name + 'があらわれた！' + \"<br>\" + 'BATTLE STARTボタンをクリック または スペースキーを押して戦闘開始' + \"<br>\" + '※ サウンドが流れます');\r\n            $('#battle_btn').show();\r\n            $('#monster_image').css('visibility', 'visible');\r\n            $('#player_image').css('visibility', 'visible');\r\n\r\n            status = 1;\r\n        })\r\n        .fail(function(response) {\r\n            console.log(response);\r\n            $('#battle_text').append(\"<br>通信に失敗しました。\");\r\n            textScroll();\r\n        })\r\n    }\r\n\r\n    //装備アイテムの有無により各ステータスを設定\r\n    function setPlayerStatus() {\r\n\r\n        if(equipItem == null) {\r\n            $('.attack').text(player.attack);\r\n            $('.item_attack').text(0);\r\n            $('.defence').text(player.defence);\r\n            $('.item_defence').text(0);\r\n            $('.mistake_damage').text(1);\r\n            $('.equipment_image').attr('src', '');\r\n\r\n            if((monster.attack - monster.min_attack) < player.defence) {\r\n                damage = monster.min_attack;\r\n            }else {\r\n                damage = monster.attack - player.defence;\r\n            }\r\n            strike = player.attack;\r\n            mistakeDamage = 1;\r\n        }else {\r\n            $('.attack').text(player.attack + equipItem.attack);\r\n            $('.item_attack').text(equipItem.attack);\r\n            $('.defence').text(player.defence + equipItem.defence);\r\n            $('.item_defence').text(equipItem.defence);\r\n            $('.mistake_damage').text(equipItem.mistake_damage);\r\n            $('.equipment_image').attr('src', '/images/item_images/'+equipItem.image);\r\n\r\n            if((monster.attack - monster.min_attack) < (player.defence + equipItem.defence)) {\r\n                damage = monster.min_attack;\r\n            }else {\r\n                damage = monster.attack - (player.defence + equipItem.defence);\r\n            }\r\n            strike = player.attack + equipItem.attack;\r\n            mistakeDamage = equipItem.mistake_damage;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //以下バトル開始前の処理 status=1\r\n\r\n    //BATTLE STARTボタンを押した際の処理\r\n    $('#battle_btn').on('click', function() {\r\n        $('#battle_btn').hide();\r\n        $('.select_field_display').hide();\r\n        $('.equipment_display').hide();\r\n        $('#selectAudio')[0].play();\r\n        ready();\r\n    });\r\n\r\n    //バトル準備\r\n    function ready() {\r\n        readyTime = 3;\r\n        //問題の出題準備\r\n        for(let i = 0; i < questions.length; i++) {\r\n            words.push(questions[i].word);\r\n            wordsKana.push(questions[i].word_kana);\r\n        }\r\n\r\n        $('#ready_count').show();\r\n        $('#ready_count').text(readyTime);\r\n        //ゲーム開始カウントダウン\r\n        let readyTimer = setInterval(function(){\r\n            $('#ready_count').text(readyTime);\r\n            readyTime--;\r\n            if(readyTime < 0){\r\n                clearInterval(readyTimer);\r\n                readyTime = 3;\r\n                $('#change_equipment_btn').prop('disabled', true);\r\n                $('#change_equipment_btn').css('color', 'lightgray');\r\n                $('#change_field_btn').prop('disabled', true);\r\n                $('#change_field_btn').css('color', 'lightgray');\r\n                gameStart();\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    //バトル開始\r\n    function gameStart() {\r\n        $('#ready_count').hide();\r\n        //出題処理\r\n        setQuestion();\r\n        //各値の初期化\r\n        score = 0;\r\n        correctCount = 0;\r\n        mistakeCount = 0;\r\n        //サウンドの再生\r\n        $('#battleAudio')[0].play();\r\n        $('#battleAudio')[0].volume = 0.4;\r\n        $('#battleAudio')[0].loop = true;\r\n        $('.readyVoice')[0].play();\r\n        //monsterの攻撃カウントを開始する\r\n        $('#count').show();\r\n        monsterAttackCount();\r\n    }\r\n\r\n\r\n\r\n    //以下バトル中の処理 status=2\r\n\r\n    //出題処理\r\n    function setQuestion() {\r\n        //ランダムに出題を行う\r\n        let number = parseInt( Math.random() * words.length );\r\n\r\n        //問題文が前問と一致する場合出題処理をやり直す\r\n        if(words[number] == beforeWord) {\r\n            setQuestion();\r\n        }\r\n\r\n        beforeWord = words[number];\r\n        $('#word').show();\r\n        $('#word').text(words[number]);\r\n        if(field.id == 2 || field.id == 4) {\r\n            $('#word_kana').text('');            \r\n        }else {\r\n            $('#word_kana').text(wordsKana[number]);\r\n        }\r\n        $('#word_kana').show();\r\n        //ひらがな文字列を分割する\r\n        separationKana = wordSeparation(wordsKana[number]);\r\n        //分割したひらがな文字列をローマ字文字列に変換したものと、例外入力用の追加辞書を作成\r\n        [separationRomaji, aditionalDict] = wordChangeRomaji(separationKana);\r\n\r\n        $('#word_romaji').show();\r\n        $('#word_romaji').text(separationRomaji.join(''));\r\n        //分割済みの問題文の先頭1要素を取り出す\r\n        currentStr = separationKana.shift();\r\n        currentRomaji = separationRomaji.shift();\r\n\r\n        charInsort();\r\n    }\r\n\r\n    //問題文を分割する処理\r\n    function wordSeparation(kana) {\r\n        //returnする文字列を格納する変数\r\n        let returnKana = [];\r\n        //\"っ\"の判定に利用\r\n        let judgeChar = [\"a\", \"i\", \"u\", \"e\", \"o\", \"n\"];\r\n\r\n        //受け取った問題文の文字列を1文字づつ判定\r\n        for(let i = 0; i < kana.length; i++) {\r\n            //小文字の処理\r\n            //先頭文字でなく、1つ前の文字と今回の文字を繋げた文字列がkanaDictにある場合(\"しゃ\"など)\r\n            if(i > 0 && kanaDict[kana[i-1] + kana[i]]) {\r\n                //返す文字列に入れていた最後の要素を取り出す\r\n                let beforeKana = returnKana.pop();\r\n                //最後の要素に今回の文字を連結して1つのブロックとして再度挿入\r\n                returnKana.push(beforeKana + kana[i]);\r\n\r\n            //\"っ\"の処理\r\n            //最後の文字でなく、判定中の文字が\"っ\"であり、次の文字があ行またはな行ではない場合\r\n            }else if(i != kana.length - 1 && kana[i] == \"っ\" && judgeChar.indexOf(kanaDict[kana[i+1]][0][0]) == -1) {\r\n                //次の文字を連結して1つのブロックとして挿入\r\n                returnKana.push(kana[i] + kana[i+1]);\r\n                //次の文字の判定を飛ばす\r\n                i++;\r\n\r\n            //それ以外の通常判定\r\n            }else {\r\n                returnKana.push(kana[i]);\r\n            }\r\n        }\r\n        return returnKana;\r\n    }\r\n\r\n    //分割した問題文をローマ字表記に変換する処理\r\n    function wordChangeRomaji(separationKana) {\r\n        //returnするローマ字文字列\r\n        let returnRomaji = [];\r\n        //returnする例外入力用辞書\r\n        let returnAditionalDict = [];\r\n        //\"ん\"をnnまたはxnと入力しなければならない際の判定に利用\r\n        let judgeN = [\"a\", \"i\", \"u\", \"e\", \"o\", \"y\", \"n\"];\r\n        //あいまい入力の一時的なリスト\r\n        let aditionalList = [];\r\n\r\n        //分割されたブロック毎に判定を行う\r\n        for(let i = 0; i < separationKana.length; i++) {\r\n\r\n            //\"ん\"以外のブロック単位の分割文字列がkanaDictに登録されていた場合\r\n            if(separationKana[i] != \"ん\" && kanaDict[separationKana[i]]) {\r\n                //kanaDictに登録されている打ち方の内、最初の1つを挿入する\r\n                returnRomaji.push(kanaDict[separationKana[i]][0]);\r\n\r\n            //\"ん\"の処理\r\n            //separationKana[i]が\"ん\"であり、文末の場合\r\n            }else if(separationKana[i] == \"ん\" && i == separationKana.length - 1) {\r\n                //nnもしくはxnと入力する必要がある為、kanaDict[\"ん\"]の2番目を挿入する\r\n                returnRomaji.push(kanaDict[separationKana[i]][1]);\r\n\r\n            //separationKana[i]が\"ん\"であり、separationKana[i+1]があ行、な行、や行、\"ん\"の場合\r\n            }else if(i != separationKana.length - 1 && separationKana[i] == \"ん\" && judgeN.indexOf(kanaDict[separationKana[i+1]][0][0]) != -1 ) {\r\n                //nnもしくはxnと入力する必要がある\r\n                returnRomaji.push(kanaDict[separationKana[i]][1]);\r\n\r\n            //それ以外の\"ん\"の処理\r\n            }else if(separationKana[i] == \"ん\") {\r\n                //separationKana[i+1]があ行、な行、や行、\"ん\"でないのでkanaDict[\"ん\"]の最初の打ち方を挿入する\r\n                returnRomaji.push(kanaDict[separationKana[i]][0]);\r\n\r\n            }else {\r\n                //kanaDictに登録されていない場合、分割文字列の最初の1文字を除いた文字列をkanaDictから検索して代入\r\n                strList = separationKana[i].length == 2 ? kanaDict[separationKana[i][1]] : kanaDict[separationKana[i][1] + separationKana[i][2]];\r\n                //strListの要素の数だけ判定を行う\r\n                for(let j = 0; j < strList.length; j++) {\r\n                    //子音部分のローマ字を繰り返すことにより、\"っ\"を表現する\r\n                    aditionalList.push(strList[j][0] + strList[j]);\r\n                }\r\n                //returnAditionalDictに登録\r\n                returnAditionalDict[separationKana[i]] = aditionalList;\r\n                //aditionalDictに登録されている打ち方の内、最初の1つを挿入する\r\n                returnRomaji.push(returnAditionalDict[separationKana[i]][0]);\r\n                //aditionalListの初期化\r\n                aditionalList = [];\r\n            }\r\n        }\r\n        return [returnRomaji, returnAditionalDict];\r\n    }\r\n\r\n    //打キー対象のセット処理\r\n    function charInsort(){\r\n        currentChar = $('#word_romaji').text().charAt(charNum);\r\n    }\r\n\r\n\r\n    //バトル中のタイピング判定処理\r\n    function typing(key) {\r\n        let keyStr = key;\r\n\r\n        if(keyStr == \"Process\") {\r\n            return false;\r\n        }\r\n\r\n        judgeTyping += keyStr;\r\n        finishRomaji += keyStr;\r\n\r\n        //タイプしたキーが正解か不正解か判定\r\n        //表示されているローマ字と同じキーをタイプした場合\r\n        if(keyStr == currentChar){\r\n\r\n            correctType();\r\n            //\r\n            currentRomaji = currentRomaji.slice(1);\r\n\r\n        //flagNが1であり、かつnをタイプした場合も正解とする\r\n        }else if(flagN == 1 && keyStr == \"n\") {\r\n            //表示するローマ字文字列を変更\r\n            $('#word_romaji').text(finishRomaji + currentRomaji + separationRomaji.join(''));\r\n            correctType();\r\n            judgeTyping = \"\";\r\n            flagN = 0;\r\n        \r\n        //表示と異なるキーをタイプした場合\r\n        }else{\r\n            //入力中の文字列がkanaDictにあればremainingListに正解パターンを全て代入し、\r\n            //ない場合はaditionalDictのパターンを代入\r\n            if(kanaDict[currentStr]) {\r\n               remainingList = kanaDict[currentStr];\r\n            }else {\r\n                remainingList = aditionalDict[currentStr];\r\n            }\r\n            //正解パターンと照合を行う\r\n            anotherList = collationList(judgeTyping, remainingList);\r\n            if(anotherList != \"\") {\r\n                currentRomaji = anotherList[0].slice(judgeTyping.length);\r\n                //表示するローマ字文字列を変更\r\n                $('#word_romaji').text(finishRomaji + currentRomaji + separationRomaji.join(''));\r\n                correctType();\r\n\r\n            //\r\n            }else if(currentStr.length >= 2) {\r\n                remainingList = kanaDict[currentStr[0]];\r\n                anotherList = collationList(judgeTyping, remainingList);\r\n\r\n                if(anotherList != \"\") {\r\n                    nextStr = currentStr.slice(1);\r\n                    currentStr = currentStr[0];\r\n                    separationKana.unshift(nextStr);\r\n                    currentRomaji = anotherList[0].slice(judgeTyping.length);\r\n                    nextRomaji = kanaDict[nextStr][0];\r\n                    separationRomaji.unshift(nextRomaji);\r\n\r\n                    $('#word_romaji').text(finishRomaji + currentRomaji + separationRomaji.join(''));\r\n                    correctType();\r\n\r\n                }else if(currentStr.length == 3) {\r\n                    remainingList = aditionalDict[currentStr];\r\n                    anotherList = collationList(judgeTyping, remainingList);\r\n\r\n                    if(anotherList != \"\") {\r\n                        nextStr = currentStr[2];\r\n                        currentStr.pop();\r\n                        separationKana.unshift(nextStr);\r\n                        currentRomaji = anotherList[0].slice(judgeTyping.length);\r\n                        nextRomaji = kanaDict[nextStr][0];\r\n                        separationRomaji.unshift(nextRomaji);\r\n\r\n                        $('#word_romaji').text(finishRomaji + currentRomaji + separationRomaji.join(''));\r\n                        correctType();\r\n\r\n                    }else {\r\n                        missType();\r\n                    }\r\n\r\n                }else {\r\n                    missType();\r\n                }\r\n            }else {\r\n                missType();\r\n            }\r\n            flagN = 0;\r\n        }\r\n\r\n        function collationList(judgeTyping, remainingList) {\r\n            //照合する打ち方を格納する変数\r\n            let returnAnotherList = [];\r\n            //remainingListの要素の数の分照合を行う\r\n            for(let i = 0; i < remainingList.length; i++) {\r\n\r\n                if(remainingList[i].startsWith(judgeTyping)) {\r\n                    returnAnotherList.push(remainingList[i]);\r\n                }\r\n            }\r\n\r\n            return returnAnotherList;\r\n        }\r\n\r\n        function correctType() {\r\n            //正解音と不正解音をリセットし、正解音を鳴らす\r\n            //document.getElementById('missaudio').pause();\r\n            $('#missAudio')[0].currentTime = 0;\r\n            //document.getElementById('correctaudio').pause();\r\n            $('#correctAudio')[0].currentTime = 0;\r\n            $('#correctAudio')[0].play();\r\n            //正解した文字の色を切り替える\r\n            $('#word_romaji').html(\"<span style='color: red;'>\" + $('#word_romaji').text().substr(0, charNum+1) + \"</span>\" + $('#word_romaji').text().substr(charNum + 1, $('#word_romaji').text().length));\r\n            //次の文字のセットと正解数のカウントアップ\r\n            charNum++;\r\n            correctCount++;\r\n\r\n            $('#monster_hp').text(parseInt($('#monster_hp').text()) - strike);\r\n            if($('#monster_hp').text() <= 0) {\r\n                $('#monster_hp').text(0);\r\n                victory();\r\n            }\r\n            charInsort();\r\n        }\r\n\r\n        function missType() {\r\n            //正解音と不正解音をリセットし、不正解音を鳴らす\r\n            //document.getElementById('missaudio').pause();\r\n            $('#missAudio')[0].currentTime = 0;\r\n            //document.getElementById('correctaudio').pause();\r\n            $('#correctAudio')[0].currentTime = 0;\r\n            $('#missAudio')[0].play();\r\n            //不正解数のカウントアップ\r\n            mistakeCount++;\r\n            finishRomaji = finishRomaji.slice(0, -1);\r\n            judgeTyping = judgeTyping.slice(0, -1);\r\n\r\n            $('#player_hp').text(parseInt($('#player_hp').text()) - mistakeDamage);\r\n            $('#battle_text').append(\"<br>タイプミス！ \" + user.name + \" は \" + mistakeDamage + \" のダメージ！\");\r\n            if($('#player_hp').text() <= 0) {\r\n                $('#player_hp').text(0);\r\n                gameover();\r\n            }\r\n            textScroll();    \r\n        }\r\n\r\n        if(currentRomaji == \"\") {\r\n            currentRomaji = separationRomaji.shift();\r\n            currentStr = separationKana.shift();\r\n\r\n            if(judgeTyping == \"n\" && (fieldData.id != 2 || field.id != 4)) {\r\n                flagN = 1;\r\n            }else {\r\n                flagN = 0;\r\n            }\r\n\r\n            judgeTyping = \"\";\r\n        }\r\n\r\n        //次の問題の出題処理\r\n        if($('#monster_hp').text() != 0 && $('#player_hp').text() != 0 && charNum == $('#word_romaji').text().length){\r\n            charNum = 0;\r\n            judgeTyping = [];\r\n            finishRomaji = [];\r\n            setQuestion();\r\n        }\r\n    }\r\n\r\n    //モンスターの攻撃カウント処理\r\n    function monsterAttackCount(){\r\n        //timeRemaining変数にmonster.attack_intervalを代入する\r\n        timeRemaining = monster.attack_interval;\r\n\r\n        $('#count').html(\"モンスターの攻撃まであと <span class='time'>\" + timeRemaining + \"</span> 秒\");\r\n\r\n        clearInterval(attackTimer);\r\n        //モンスターの攻撃カウントダウン処理\r\n        attackTimer = setInterval(function(){\r\n            if(parseInt($('#player_hp').text()) <= 0 || parseInt($('#monster_hp').text()) <= 0){\r\n                return false;\r\n            }\r\n\r\n            if(status == 2) {\r\n                timeRemaining--;\r\n                $('#count').html(\"モンスターの攻撃まであと <span class='time'>\" + timeRemaining + \"</span> 秒\");\r\n                if(timeRemaining <= 0){\r\n                    clearInterval(attackTimer);\r\n                    //モンスター攻撃処理\r\n                    monsterAttack();\r\n                }\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    //モンスターの攻撃処理\r\n    function monsterAttack() {\r\n        //player.hpの減少処理\r\n        $('#player_hp').html(parseInt($('#player_hp').text()) - damage);\r\n\r\n        $('#attackAudio')[0].play();\r\n\r\n        $('#battle_text').append(`<br>${monster.name}の攻撃！ ${user.name} は ${damage} のダメージ！`);\r\n\r\n        textScroll();\r\n\r\n        if($('#player_hp').text() <= 0){\r\n            $('#player_hp').text(0);\r\n            gameover();\r\n        }\r\n\r\n        monsterAttackCount();\r\n    }\r\n\r\n\r\n\r\n    //以下バトル勝利～勝利後の処理 status=3\r\n\r\n    //勝利処理\r\n    function victory(){\r\n        //モンスター攻撃カウントと問題文を非表示にする\r\n        $('#count').hide();\r\n        $('#word').hide();\r\n        $('#word_kana').hide();\r\n        $('#word_romaji').hide();\r\n        \r\n        //戦闘BGMを停止し、勝利BGMを流す\r\n        $('#battleAudio')[0].pause();\r\n        $('#battleAudio')[0].currentTime = 0;\r\n        $('#victoryAudio')[0].play();\r\n        $('#victoryAudio')[0].volume = 0.4;\r\n        $('.victoryVoice')[0].play();\r\n        $('#battle_text').append(\"<br>\" + monster.name + \"をたおした！\");\r\n        $('#monster_image').css('visibility', 'hidden');\r\n        textScroll();\r\n\r\n        //スコアを計算し表示\r\n        score = Math.ceil(monster.hp * (correctCount/(correctCount+mistakeCount)) - (mistakeCount * mistakeDamage));\r\n\r\n        //勝利カウントを増やす\r\n        switch(field.id) {\r\n            case 1:\r\n                player.field1_victory_count++;\r\n                nextFieldFlag1 = 1;\r\n                break;\r\n            case 2:\r\n                player.field2_victory_count++;\r\n                nextFieldFlag2 = 1;\r\n                break;\r\n            case 3:\r\n                player.field3_victory_count++;\r\n                nextFieldFlag3 = 1;\r\n                break;\r\n            case 4:\r\n                player.field4_victory_count++;\r\n                nextFieldFlag4 = 1;\r\n                break;\r\n            case 5:\r\n                player.field5_victory_count++;\r\n                break;\r\n        }\r\n\r\n        $('#scoredis').show();\r\n        $('#press_enter').show();\r\n        $('#scoredis').html(\"スコア： \" + score + \"点<hr>正タイプ数： \" + correctCount + \"<br>ミスタイプ数： \" + mistakeCount);\r\n\r\n        status = 3;\r\n    }\r\n\r\n    //経験値獲得処理\r\n    function addExp() {\r\n        $('#battle_text').append(\"<br>\" + user.name + \"は \" + monster.exp + \" の経験値を得た\");\r\n        textScroll();\r\n        //ドロップ判定\r\n        //ドロップアイテムを既に持っている場合はドロップしない\r\n        let havingItemsId = [];\r\n        for(let i = 0; i < havingItems.length; i++) {\r\n            havingItemsId.push(havingItems[i].id);\r\n        }\r\n        judgeHaving = $.inArray(dropItem.id, havingItemsId);\r\n\r\n        if(judgeHaving < 0) {\r\n            judgeDrop = parseInt(Math.random() * 5);\r\n        }else {\r\n            judgeDrop = 1;\r\n        }\r\n\r\n        if(judgeDrop == 0) {\r\n            player.get_item = dropItem.id;\r\n        }else {\r\n            player.get_item = \"\";\r\n        }\r\n\r\n        //レベルアップ判定とアイテムドロップ判定\r\n        if(player.next_exp <= monster.exp) {\r\n            displayEnter = 1;\r\n        }else if(judgeDrop == 0) {\r\n            player.next_exp -= monster.exp;\r\n            displayEnter = 4;\r\n        }else {\r\n            player.next_exp -= monster.exp;\r\n            displayEnter = 5;\r\n        }\r\n    }\r\n\r\n    //レベルアップ処理\r\n    function levelUp() {\r\n        let getExp = monster.exp;\r\n        player.exp += getExp;\r\n\r\n        for(let i = player.level; ; i++) {\r\n\r\n            if(getExp < player.next_exp) {\r\n                player.next_exp -= getExp;\r\n                \r\n                for(let j = 0; j < levelUpCount; j++) {\r\n                    bonusPoint += player.level >= 30 ? 2 : 1;\r\n                }\r\n                player.level += levelUpCount;\r\n                break;\r\n            }\r\n\r\n            getExp -= player.next_exp;\r\n            player.next_exp = nextExp(i);\r\n            levelUpCount++;\r\n        }\r\n\r\n        $('#battle_text').append(`<br>${user.name} は レベル <span style=\"color: yellow\">${player.level}</span> に上がった！`);\r\n        textScroll();\r\n\r\n        displayEnter = 2;\r\n    }\r\n\r\n    //レベルアップ時のHP成長とボーナスポイントを振り分ける処理\r\n    function addStatusSelect() {\r\n        let growHp = 0;\r\n        for(let i = 0; i < levelUpCount; i++) {\r\n            growHp += parseInt(Math.random() * 5 + 5);\r\n        }\r\n\r\n        player.hp += growHp;\r\n        $('#battle_text').append(`<br>さいだいHPが<span style=\"color: yellow\"> ${growHp} </span>上がった！`);\r\n        divideBonusPoint();\r\n\r\n        $('#press_enter').hide();\r\n        displayEnter = 3;\r\n        levelUpCount = 0;\r\n    }\r\n\r\n    //ボーナスポイント振り分け選択処理\r\n    function divideBonusPoint() {\r\n        if(bonusPoint == 0) {\r\n            $('#press_enter').show();\r\n\r\n            if(judgeDrop == 0) {\r\n                displayEnter = 4;\r\n            }else {\r\n                displayEnter = 5;\r\n            }\r\n        }else {\r\n            $('#battle_text').append(\"<br>成長させるステータスを選んでください  ボーナスポイント残り \"\r\n            + bonusPoint + \"<br>HP(\" + player.hp + \"→\" + (player.hp + 10) + \")：1ボタン　攻撃力(\" + player.attack + \"→\" + (player.attack + 1)\r\n            + \")：2ボタン　防御力(\" + player.defence + \"→\" + (player.defence + 2) + \")：3ボタン\");\r\n            textScroll();\r\n        }\r\n    }\r\n\r\n    //HP成長を選んだ際の処理\r\n    function addHp() {\r\n        player.hp += 10;\r\n        $('#battle_text').append(\"<br>さらに、さいだいHPが<span style='color: yellow'> 10 </span>上がった！\");\r\n        textScroll();\r\n        bonusPoint--;\r\n\r\n        divideBonusPoint();\r\n    }\r\n\r\n    //攻撃力成長を選んだ際の処理\r\n    function addAttack() {\r\n        player.attack++;\r\n        $('#battle_text').append(\"<br>さらに、攻撃力が<span style='color: yellow'> 1 </span>上がった！\");\r\n        textScroll();\r\n        bonusPoint--;\r\n\r\n        divideBonusPoint();\r\n    }\r\n\r\n    //防御力成長を選んだ際の処理\r\n    function addDefence() {\r\n        player.defence += 2;\r\n        $('#battle_text').append(\"<br>さらに、防御力が<span style='color: yellow'> 2 </span>上がった！\");\r\n        textScroll();\r\n        bonusPoint--;\r\n\r\n        divideBonusPoint();\r\n    }\r\n\r\n    //アイテム獲得処理\r\n    function itemDrop() {\r\n\r\n        $('#battle_text').append(\"<br><span style='color: lime'>\" + dropItem.name + \" </span>を手に入れた！\");\r\n        textScroll();\r\n\r\n        displayEnter = 5;\r\n    }\r\n\r\n    //勝利後のデータを保存する処理\r\n    function dataSave() {\r\n        $('#battle_text').append(\"<br>データを保存しています・・・\");\r\n        textScroll();\r\n\r\n        $.ajax({\r\n            url: '/setdata',\r\n            type: 'POST',\r\n            dataType: 'text',\r\n            contentType: \"application/json\",\r\n            data: JSON.stringify(\r\n                player,\r\n            ),\r\n        })\r\n        .done(function() {\r\n            $('#battle_text').append(\"<br>データを保存しました。\");\r\n            if(player.field1_victory_count == 5 && nextFieldFlag1 == 1) {\r\n                $('#battle_text').append(\"<br>新たなフィールド <span style='color: yellow'>森林地帯</span> が解放されました！\");\r\n                releaseField();\r\n            }else if(player.field2_victory_count == 5 && nextFieldFlag2 == 1) {\r\n                $('#battle_text').append(\"<br>新たなフィールド <span style='color: yellow'>荒野地帯</span> が解放されました！\");\r\n                releaseField();\r\n            }else if(player.field3_victory_count == 5 && nextFieldFlag3 == 1) {\r\n                $('#battle_text').append(\"<br>新たなフィールド <span style='color: yellow'>山岳地帯</span> が解放されました！\");\r\n                releaseField();\r\n            }else if(player.field4_victory_count == 5 && nextFieldFlag4 == 1) {\r\n                $('#battle_text').append(\"<br>新たなフィールド <span style='color: yellow'>魔界</span> が解放されました！\");\r\n                releaseField();\r\n            }\r\n            textScroll();\r\n            displayEnter = 0;\r\n            status = 4;\r\n            judgeEnter = 0;\r\n        })\r\n        .fail(function(response) {\r\n            console.log(response)\r\n            $('#battle_text').append(\"<br>データの保存に失敗しました。再度通信を行う場合はEnterキーを押してください。\");\r\n            textScroll();\r\n            judgeEnter = 0;\r\n        });\r\n\r\n    }\r\n    \r\n\r\n\r\n    //以下バトル敗北処理\r\n\r\n    //敗北処理\r\n    function gameover(){\r\n        //モンスター攻撃カウントと問題文を非表示にする\r\n        $('#count').hide();\r\n        $('#word').hide();\r\n        $('#word_kana').hide();\r\n        $('#word_romaji').hide();\r\n\r\n        //戦闘BGMを停止し、敗北BGMを流す\r\n        $('#battleAudio')[0].pause();\r\n        $('#battleAudio')[0].currentTime = 0;\r\n        $('#loseAudio')[0].play();\r\n        $('#loseAudio')[0].volume = 0.4;\r\n        $('.loseVoice')[0].play();\r\n\r\n        //敗北テキストの表示\r\n        $('#battle_text').append(\"<br>\" + monster.name + \"にやぶれた・・・\");\r\n\r\n        $('#press_enter').show();\r\n\r\n        //プレイヤー画像を非表示にする\r\n        $('#player_image').css('visibility', 'hidden');\r\n        textScroll();\r\n\r\n        player.get_item = \"\";\r\n        status = 4;\r\n    }\r\n\r\n\r\n\r\n    //以下バトル終了後の次の行動を選択する処理 status=4\r\n\r\n    //次の行動を選択する処理\r\n    function selectNextAction() {\r\n        $('#press_enter').hide();\r\n        $('#scoredis').hide();\r\n\r\n        $('#battle_text').append(\"<br>次の行動を選択してください。\");\r\n        textScroll();\r\n\r\n        let victoryFlg = victoryCount();\r\n        if(victoryFlg != victoryCnt) {\r\n            $('#shareing_twitter').attr('href', `https://twitter.com/share?url=https://typing-rpg.com/login&hashtags=TypingRPG&text=${monster.name}をスコア${score}で倒しました！`);\r\n            $('.shareing_sns').show();\r\n        }else {\r\n            $('#shareing_twitter').attr('href', '');\r\n            $('.shareing_sns').hide();\r\n        }\r\n        $('.select_next_action').css('display', 'flex');\r\n\r\n        battleInit();\r\n    }\r\n\r\n    //次のバトルを選択した際の処理\r\n    $('#next_battle').on('click', function() {\r\n        getData();\r\n    });\r\n\r\n    //フィールドの変更を選択した際の処理\r\n    $('#change_field').on('click', function() {\r\n        $('#change_field_btn').trigger('click');\r\n    })\r\n\r\n    //装備の変更ボタンを選択した際の処理\r\n    $('#change_equipment').on('click', function() {\r\n        $('#change_equipment_btn').trigger('click');\r\n    });\r\n\r\n\r\n\r\n    //以下システム処理やメインページの各ボタンを押した際の処理\r\n\r\n    //バトル中に使用した変数を初期化\r\n    function battleInit() {\r\n        //各変数の初期化\r\n        questions = [];\r\n        monster = [];\r\n        dropItem = [];\r\n        user = [];\r\n        field = [];\r\n        havingItems = [];\r\n        status = 0;\r\n        displayEnter = 0;\r\n        readyTime = 3;\r\n        words = [];\r\n        beforeWord = \"\";\r\n        wordsKana = [];\r\n        separationKana = [];\r\n        separationRomaji = [];\r\n        aditionalDict = [];\r\n        correctCount = 0;\r\n        mistakeCount = 0;\r\n        score = 0;\r\n        judgeTyping = [];\r\n        finishRomaji = [];\r\n        flagN = 0;\r\n        levelUpCount = 0;\r\n        bonusPoint = 0;\r\n        currentChar = \"\";\r\n        charNum = 0;\r\n        timeRemaining = 0;\r\n        nextFieldFlag1 = 0;\r\n        nextFieldFlag2 = 0;\r\n        nextFieldFlag3 = 0;\r\n        nextFieldFlag4 = 0;\r\n        $('#change_equipment_btn').prop('disabled', false);\r\n        $('#change_equipment_btn').css('color', 'white');\r\n        $('#change_field_btn').prop('disabled', false);\r\n        $('#change_field_btn').css('color', 'white');\r\n    }\r\n\r\n    //statusの値によってキーボードを押した際の動作を分ける\r\n    $('body').on('keydown', function(e) {\r\n\r\n        //バトル開始前\r\n        if(status == 1 && e.key == ' ') {\r\n            if(infoFlag == 1) {\r\n                return false;\r\n            }\r\n            status = 2;\r\n            $('#battle_btn').trigger('click');\r\n        }\r\n\r\n        //バトル中\r\n        if(status == 2) {\r\n            if(infoFlag == 1) {\r\n                return false;\r\n            }\r\n\r\n            if(e.key == \"Escape\") {\r\n                $('#battle_reset').trigger('click');\r\n            }else {\r\n                typing(e.key);\r\n            }\r\n        }\r\n\r\n        //バトル勝利後\r\n        if(status == 3 && displayEnter == 3) {\r\n            if(infoFlag == 1) {\r\n                return false;\r\n            }\r\n\r\n            if(e.key == 1) {\r\n                addHp();\r\n            }else if(e.key == 2) {\r\n                addAttack();\r\n            }else if(e.key == 3) {\r\n                addDefence();\r\n            }else if(e.key == \"Enter\"){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(status == 3 && e.key == \"Enter\") {\r\n            if(judgeEnter == 1 || infoFlag == 1) {\r\n                return false;\r\n            }\r\n\r\n            if(displayEnter == 0) {\r\n                addExp();\r\n            }else if(displayEnter == 1) {\r\n                levelUp();\r\n            }else if(displayEnter == 2) {\r\n                addStatusSelect();\r\n            }else if(displayEnter == 4) {\r\n                itemDrop();\r\n            }else {\r\n                judgeEnter = 1;\r\n                dataSave();\r\n            }\r\n        }\r\n\r\n        //バトル敗北または勝利後の経験値取得やレベルアップ処理後\r\n        if(status == 4 && e.key == \"Enter\") {\r\n            selectNextAction();\r\n        }\r\n    });\r\n\r\n\r\n    //所持アイテム一覧の取得と表示処理\r\n    function getHavingItem() {\r\n        $.ajax({\r\n            url: '/getitem',\r\n            type: 'POST',\r\n        })\r\n        .done(function(response) {\r\n            havingItems = response.items;\r\n            equipItem = response.equip_item;\r\n            let i;\r\n            let html = \"\";\r\n            \r\n            for(i = 0; i < havingItems.length; i++) {\r\n                html += `<li class=\"having_item\" data-id=\"${havingItems[i].id}\">\r\n                            <div class=\"item_image\">\r\n                                <img src=\"/images/item_images/${havingItems[i].image}\" alt=\"${havingItems[i].name}\">\r\n                                <p>${havingItems[i].name}</p>\r\n                            </div>\r\n                            <div class=\"item_detail\">\r\n                                <p><i class=\"far fa-hand-rock\"></i>：<span>${havingItems[i].attack}</span></p>\r\n                                <p><i class=\"fas fa-shield-alt\"></i>：<span>${havingItems[i].defence}</span></p>\r\n                                <p><i class=\"far fa-tired\"></i>：<span>${havingItems[i].mistake_damage}</span></p>\r\n                            </div>\r\n                        </li>`;\r\n            }\r\n\r\n            $('.having_items_list').empty().append(html);\r\n            setEquip();\r\n            \r\n            $('.equipment_display').show();\r\n            $('#battle_text').append(\"<br>装備するアイテムを選択してください。\");\r\n        })\r\n        .fail(function(response) {\r\n            console.log(response)\r\n            $('#battle_text').append(\"<br>データの取得に失敗しました。\");\r\n            textScroll();\r\n        });\r\n    }\r\n\r\n    //装備中のアイテムをオレンジの枠で囲む処理\r\n    function setEquip() {\r\n        $('.equip').removeClass('equip');\r\n\r\n        if(equipItem != null) {\r\n            $('.having_item').filter(function() {\r\n                return($(this).data('id') == equipItem.id);\r\n            })\r\n            .addClass('equip');\r\n        }\r\n    }\r\n\r\n    //所持アイテムの装備着脱処理\r\n    $(document).on('click', '.having_item', function() {\r\n        let itemId = {'id': $(this).data('id')}\r\n\r\n        if(equipItem != null && equipItem.id == itemId.id) {\r\n            itemId = {'id': ''};\r\n        }else {\r\n            itemId = {'id': $(this).data('id')};\r\n        }\r\n\r\n        $.ajax({\r\n            url: '/setitem',\r\n            type: 'POST',\r\n            contentType: \"application/json\",\r\n            data: JSON.stringify(\r\n                itemId,\r\n            ),\r\n        })\r\n        .done(function(response) {\r\n            //equipItemの書き換え\r\n            equipItem = response.item;\r\n            //プレイヤーステータスの書き換え\r\n            setPlayerStatus();\r\n\r\n            if(equipItem != null) {\r\n                $('#battle_text').append(\"<br>\" + equipItem.name + \" を装備しました。\");\r\n            }else {\r\n                $('#battle_text').append(\"<br>装備を外しました。\");\r\n            }\r\n\r\n            setEquip();\r\n            textScroll();\r\n        })\r\n        .fail(function(response) {\r\n            console.log(response);\r\n            $('#battle_text').append(\"<br>通信に失敗しました。\");\r\n            textScroll();\r\n        });\r\n    });\r\n\r\n    //装備選択画面を閉じる\r\n    $('.close_equipment').on('click', function() {\r\n        $('.equipment_display').hide();\r\n    });\r\n\r\n    $('#change_equipment_btn').on('click', function() {\r\n        $('#battle_text').append(\"<br>所持アイテムを取得中・・・\");\r\n        textScroll();\r\n\r\n        getHavingItem();\r\n    });\r\n\r\n    //ヘッダーのフィールド変更ボタンを押した際の処理\r\n    $('#change_field_btn').on('click', function() {\r\n        $('.select_next_action').hide();\r\n        $('.equipment_display').hide();\r\n        $('#battle_btn').hide();\r\n        $('.select_field_display').show();\r\n        fieldData = new FormData();\r\n\r\n        $('#battle_text').html(\"フィールドを選択してください。\");\r\n        status = 0;\r\n    });\r\n\r\n    //ヘッダーのバトルのリセットボタンを押した際の処理\r\n    $('#battle_reset').on('click', function() {\r\n        if(status != 2) {\r\n            return false;\r\n        }\r\n        clearInterval(attackTimer);\r\n        $('#change_equipment_btn').prop('disabled', false);\r\n        $('#change_equipment_btn').css('color', 'white');\r\n        $('#change_field_btn').prop('disabled', false);\r\n        $('#change_field_btn').css('color', 'white');\r\n        $('#count').hide();\r\n        $('#word').hide();\r\n        $('#word_kana').hide();\r\n        $('#word_romaji').hide();\r\n        $('#battleAudio')[0].pause();\r\n        $('#battleAudio')[0].currentTime = 0;\r\n        $('#player_hp').text(player.hp);\r\n        $('#monster_hp').text(monster.hp);\r\n        $('#battle_text').html(\"バトルをリセットしました。<br>BATTLE STARTボタンをクリック または スペースキーを押して戦闘開始\");\r\n        $('#battle_btn').show();\r\n        correctCount = 0;\r\n        mistakeCount = 0;\r\n        currentChar = \"\";\r\n        charNum = 0;\r\n        judgeTyping = [];\r\n        finishRomaji = [];\r\n        timeRemaining = 0;\r\n\r\n        status = 1;\r\n    });\r\n\r\n    //インフォメーションボタンを押した際の処理\r\n    $('#show_info').on('click', function() {\r\n        $('#game_tab').prop('checked', true);\r\n        infoFlag = 1;\r\n        //インフォメーションモーダルを開く\r\n        $('.info_modal').show();\r\n    })\r\n\r\n    //インフォメーションモーダルを閉じる処理\r\n    $('.modal_close').on('click', function() {\r\n        infoFlag = 0;\r\n        $('.info_modal').hide();\r\n    })\r\n\r\n    //新たなフィールドを解放する処理\r\n    function releaseField() {\r\n        if(player.field1_victory_count >= 5) {\r\n            $('#field2').removeClass('not_select');\r\n            $('#field2').prop('disabled', false);\r\n        }\r\n        if(player.field2_victory_count >= 5) {\r\n            $('#field3').removeClass('not_select');\r\n            $('#field3').prop('disabled', false);\r\n        }\r\n        if(player.field3_victory_count >= 5) {\r\n            $('#field4').removeClass('not_select');\r\n            $('#field4').prop('disabled', false);\r\n        }\r\n        if(player.field4_victory_count >= 5) {\r\n            $('#field5').removeClass('not_select');\r\n            $('#field5').prop('disabled', false);\r\n        }\r\n    }\r\n\r\n    //選択したフィールドでの勝利数を返す\r\n    function victoryCount() {\r\n        switch(field.id) {\r\n            case 1:\r\n                return player.field1_victory_count;\r\n            case 2:\r\n                return player.field2_victory_count;\r\n            case 3:\r\n                return player.field3_victory_count;\r\n            case 4:\r\n                return player.field4_victory_count;\r\n            case 5:\r\n                return player.field5_victory_count;\r\n        }\r\n    }\r\n\r\n    //経験値テーブルの計算処理\r\n    function nextExp(currentLv) {\r\n        let returnExp = 0;\r\n        if(currentLv >= 40) {\r\n            returnExp = (currentLv - 40) * 10 + 160;\r\n        }else if(currentLv < 40 && currentLv >= 20) {\r\n            returnExp = (currentLv - 20) * 5 + 60;\r\n        }else {\r\n            returnExp = (currentLv + 1) * 3;\r\n        }\r\n\r\n        return returnExp;\r\n    }\r\n\r\n    //テキストを最下部へ自動スクロールする処理\r\n    function textScroll(){\r\n        battle_text.scroll(0, battle_text.scrollHeight);\r\n    }\r\n});\r\n"],"sourceRoot":""}